变量:
    在程序运行中 其值可以改变的量是变量
    变量在程序的执行中能够赋值发生变化
    变量有一个名字 在使用前要声明其类型 一经声明在内存中就占据其类型相应的存储空间

变量定义:
    <类型说明符> [变量名|变量名组成的列表];
    变量初始化: 创建后或创建时获得了一个特定的值
              用于初始化变量的值可以是任意复杂的表达式
    定义变量后 变量的名字随着定义就可以使用了 如: int m=1,n=2; int sum = m+n;

常量:
    载程序运行过程中 其值一直保持不变的量为常量
    常量也区分不同类型 如: 2,1024 为整数型            编辑器可以根据表面形式判断类型
                        2.0f,1024.0 为实数型
                        'h' 为字符型
                        "hello world" 为字符串类型
                        true,false 为bool类型

常量定义两种方式:
    尽量使用const定义变量 #define不会出现在编译期
    1.#define PI 3.1415926 //在编译时出错 很难排错
    2.const double PI = 3.1415926; //在编译时出错 可以排错

整型常量:
    整数常量可以是十进制 八进制 十六进制的常量
    前缀指定基数 0x或0X表示十六进制 0表示八进制 不带前缀默认十进制
    整数常量也可以带后缀 后缀可以是U和L组合 U表示无符号 L表示长整数 后缀不分大小写 UL顺序任意
    212 //合法
    215u //合法
    0xFeeL //合法
    078 //非法 八进制不能出现8
    032UU //非法 不能重复后缀

布尔常量:
    true 代表真
    false 代表假

字符常量:
    字符常量是括在单引号中 如果常量L(仅大写)开头则表示他是一个宽字符常量(L'x') 此时它必须存储在
    wchar_t类型变量中 否则它就是一个窄字符常量('x') 此时它可以存储在char类型变量中