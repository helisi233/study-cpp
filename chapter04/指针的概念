C++中内存单元内容与地址
    内存由很多内存单元组成 这些内存单元用于存放各种类型的数据(类似数组)
    计算机对内存的每个内存单元都进行了编号 这个编号就成为内存地址 地址决定了内存单元在内存中的位置
    记住这些内容单元地址不方便 于是C++语言的编译器让我们通过名字来访问这些内存位置

内存模型
    int a = 112; int* d = &a; int b = -1;
    float c = 3.14; float* e = &c;

    地址  116     112     108         104     100
    值    112     -1      1078523331  116     108

    变量名  a      b       c           d       e
    值     112     -1      1078523331  116     108

    使用变量名来代替地址 不能要求程序员记住分配的内存地址 而且程序每次运行地址也不同

指针的定义和间接访问操作
    指针本身就是一个变量 其符合变量定义的基本形式 它存储的是值的地址
    对类型T T*是"到T的指针"类型 一个类型为T*的变量能保存一个类型T的对象的地址
    如:
        int a = 112; float c = 3.14;
        int* d = &a; float* e = &c;
    通过一个指针访问它所指向地址的过程称为间接访问或者引用指针
    这个用于执行简介访问的操作符是单目操作符*
    如:
        cout << (*d) << endl;
        cout << (*e) << endl;

变量 地址 指针变量小结
    一个变量有三个重要信息
        变量的地址信息
        变量所存的信息
        变量的类型
    指针变量是一个专门用来记录变量的地址的变量
    通过指针变量可以间接是哟个另一个变量的值