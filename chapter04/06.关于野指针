未初始化和非法的指针
    例子:
        int *a;     //在栈中已经给a分配了空间
        *a = 12;    //没有对a初始化或赋值 但是直接对这块空间赋值了12
        a到底指向了哪里不知道 无法预料产生什么结果
        定位到一个非法地址长须会出错从而终止
        定位到一个可以访问的地址 无意间修改了它 这样的错误难以捕捉 引发的错误可能与原先用于操作的代码无关
      使用指针进行间接访问之前 一定要确保它已经被初始化并且恰当的赋值

NULL指针
    一个特殊的指针变量 表示不指向任何东西 解决指针指向空间不确定的问题
        int* a = NULL; 定义指针时不知道让它指向谁/不知道初始化方式
    NULL指针表示特定的指针目前为指向任何东西

使用注意事项
    对于一个指针 如果已经直到将被初始化为什么地址 那么给指针赋值这个地址
    在对一个指针进行间接引用前 要先判断这个指针是否为NULL

杜绝野指针
    指向"垃圾"内存的指针
    if等判断对它们不起作用 因为没有置NULL

    一般有三种情况
        指针变量没有初始化
        释放不用的指针没有置NULL 如delete和free之后的指针
        指针操作超越了变量的作用范围

    指针使用的注意事项
        没有初始化的 不用的 超过范围的指针 置为NULL